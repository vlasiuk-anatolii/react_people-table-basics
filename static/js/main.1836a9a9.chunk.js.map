{"version":3,"sources":["components/HomePage.tsx","api.ts","components/PeoplePage/PersonRow.tsx","components/PeoplePage/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","a","fetch","response","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","Fragment","slug","PeoplePage","useState","setPeople","error","setError","useEffect","peopleFromServer","result","length","NotFoundPage","Relocated","type","useParams","includes","to","replace","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"2OAEaA,EAAqB,kBAChC,oBAAIC,UAAU,aAAd,wB,8BCAWC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHR,qEAEQ,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCGTC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3C,OACE,gCACE,+BACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,YAAc,YAC1B,6BAAKL,EAAOM,YAAc,kBCRrBC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOf,UAAU,oBAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGHe,EAAOC,KAAI,SAACT,GACX,OACE,cAAC,IAAMU,SAAP,UACE,cAAC,EAAD,CAAWV,OAAQA,KADAA,EAAOW,aClBzBC,EAAa,WACxB,MAA4BC,mBAAS,IAArC,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,WAAM,4CACd,4BAAAtB,EAAA,+EAEmCD,IAFnC,OAEUwB,EAFV,OAIIJ,EAAUI,GAJd,gDAMIF,EAAS,sBANb,0DADc,uBAAC,WAAD,wBAWdG,KACC,IAGD,mCACoB,IAAjBJ,EAAMK,OACL,sBAAK3B,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,cAAC,EAAD,CAAae,OAAQA,OAGvB,6BAAKO,OC5BAM,EAAyB,kBACpC,oBAAI5B,UAAU,aAAd,6BCMI6B,EAAY,WAChB,IAAQC,EAASC,cAATD,KAER,OACE,qCACE,6BAAKA,KACA,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAME,SAAS,UACb,cAAC,IAAD,CAAUC,GAAG,IAAIC,SAAO,QAKpBC,EAAgB,WAC3B,OACE,sBAAKnC,UAAU,MAAf,UACE,gCACE,cAAC,IAAD,CACEiC,GAAG,IADL,kBAKC,IACD,cAAC,IAAD,CACEA,GAAG,UADL,4BAOF,cAAC,IAAD,UACE,cAAC,IAAD,CAAOG,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCvCjCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1836a9a9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h2 className=\"title is-2\">Home Page</h2>\n);\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const response = await fetch(BASE_URL);\n\n  return response.json();\n};\n","import React from 'react';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tbody>\n      <tr>\n        <td>{person.name}</td>\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{person.motherName || 'no info'}</td>\n        <td>{person.fatherName || 'no info'}</td>\n      </tr>\n    </tbody>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table is-bordered\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      {people.map((person) => {\n        return (\n          <React.Fragment key={person.slug}>\n            <PersonRow person={person} />\n          </React.Fragment>\n        );\n      })}\n\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function result() {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch {\n        setError('Cannot load people');\n      }\n    }\n\n    result();\n  }, []);\n\n  return (\n    <>\n      {error.length === 0 ? (\n        <div className=\"People__content\">\n          <h2 className=\"title is-2\">People page</h2>\n          <PeopleTable people={people} />\n        </div>\n      ) : (\n        <h2>{error}</h2>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h2 className=\"title is-2\">Page not found</h2>\n);\n","import React from 'react';\nimport {\n  NavLink, Routes, Route, Navigate, useParams,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/PageNotFound/PageNotFound';\n\nconst Relocated = () => {\n  const { type } = useParams();\n\n  return (\n    <>\n      <h2>{type}</h2>\n      {type?.includes('home')\n      && <Navigate to=\"/\" replace />}\n    </>\n  );\n};\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavLink\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n        {' '}\n        <NavLink\n          to=\"/people\"\n        >\n          People page\n        </NavLink>\n      </nav>\n\n      <Routes>\n        <Route path=\":type\" element={<Relocated />} />\n      </Routes>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}